library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;      
use ieee.numeric_std.all;

--------------------------------------------------------------------------------------
entity WriteBack is   
  port( reset: in std_logic;
	a3_mux_sel, d3_mux_sel : in std_logic_vector(1 downto 0);
	IR3_5, IR6_8, IR9_11 : in std_logic_vector(2 downto 0);
	P32_47, P48_63, P64_79, P16_31 : in std_logic_vector(15 downto 0);
	a3_mux_out : out std_logic_vector(2 downto 0);
	d3_mux_out : out std_logic_vector(15 downto 0)

);
end entity;
--------------------------------------------------------------------------------------
architecture struct of WriteBack is

signal dummy2 : std_logic_vector(15 downto 0);

--------------------------------------------------------------------------------------------------------------
	component mux4 is
	generic(input_width : integer);
	port(
		d0 : std_logic_vector(input_width-1 downto 0);
		d1 : std_logic_vector(input_width-1 downto 0);
		d2 : std_logic_vector(input_width-1 downto 0);
		d3 : std_logic_vector(input_width-1 downto 0);

	  	sel: in std_logic_vector(1 downto 0);
		dout: out std_logic_vector(input_width-1 downto 0)
	);
	end component;
-----------------------------------------------------------------------------------------------------------------
begin

--a3_mux_sel <= P5
--d3_mux_sel <= P5
--a3_mux_out <= goes to RR
--a3_mux_out <= goes to RR
-- IR and P all from P5

rf_a3_mux: mux4
generic map (3)
port map (sel => a3_mux_sel, d0 => IR3_5, d1 => IR6_8, d2 => IR9_11, d3 => dummy2, dout => a3_mux_out);
-----------------------------------------------------------------------------------------------------------------
rf_d3_mux: mux4
generic map (16)
port map (sel => d3_mux_sel, d0 => P32_47, d1 => P48_63, d2 => P64_79, d3 => P16_31, dout => d3_mux_out);

end struct
